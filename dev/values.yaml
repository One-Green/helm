# Default values for One-Green stack chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

ogGlobal:
  microk8s:
    enableCustomIngress: false
  coreImage: &core_img docker.io/shanisma/og-core:0.0.7
  telegrafImage: &telegraf_img telegraf:1.20.4
  storageClasse: &storage_class_name scw-bssd

sprinklerController:
  enable: "true"
  image: *core_img
  imagePullPolicy: "IfNotPresent"

waterController:
  enable: "true"
  image: *core_img
  imagePullPolicy: "IfNotPresent"

lightController:
  enable: "true"
  image: *core_img
  imagePullPolicy: "IfNotPresent"

celeryAsyncSharedWorker:
  image: *core_img
  imagePullPolicy: "IfNotPresent"
  log:
    level: "info"
  replicas: 3
  HPA:
    enable: "true"
    minReplicas: 1
    maxReplicas: 5
    cpu:
      targetAverageUtilization: 30

api:
  image: *core_img
  imagePullPolicy: "Always"
  django:
    adminUsername: "admin"
    adminPassword: "admin"
    debug: false
  replicas: 1
  log:
    level: "info"
  ingress:
    enable: true
    useCertmanager: true
    issuername: letsencrypt-prod
    host: "api.dev1.og-ingest1.com"

postgresql:
  global:
    postgresql:
      auth:
        username: "postgres"
        postgresPassword: "anyrandompassword"
    storageClass: *storage_class_name
  replication:
    readReplicas: 0
  persistence:
    size: "1Gi"
  image:
    pullPolicy: "IfNotPresent"

influxDB:
  image: "influxdb:2.0.8"
  persistent:
    enablePersistant: "true"
    storageClass: *storage_class_name
    volumeRequest: "1Gi"
  dataRetention: "1w"
  secret:
    user: "admin"
    password: "anyrandompassword"
    token: &influxdb_secret_token "change_this_token"

rabbitmq:
  replicaCount: 3
  extraPlugins: rabbitmq_mqtt
  persistence:
    enabled: true
    storageClass: *storage_class_name
    size: 1Gi
  auth:
    username: mqtt
    password: anyrandompassword
    erlangCookie: secretcookie
  extraContainerPorts:
    - name: mqtt
      containerPort: 1883

rabbitmqtNodePort:
  enable: true
  NodePort: 30182

telegraf:
  imagePullPolicy: IfNotPresent
  image: *telegraf_img

grafana:
  persistence:
    enabled: true
    type: "pvc"
    size: "1Gi"
    storageClassName: *storage_class_name
  ingress:
    enabled: false
#    annotations:
#      cert-manager.io/cluster-issuer: letsencrypt-prod
#    labels:
#      {}
#    path: /
#    hosts:
#      - "grafana.dev1.og-ingest1.com"
#    tls:
#      - secretName: grafana-tls
#        hosts:
#          - "grafana.dev1.og-ingest1.com"

  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: InfluxDB_v2_Flux
          type: influxdb
          access: proxy
          url: "http://{{ .Release.Name }}-influxdb:8086"
          secureJsonData:
            token: *influxdb_secret_token
          jsonData:
            version: Flux
            organization: "{{ .Release.Name }}"
            defaultBucket: "{{ .Release.Name }}-bucket"
            tlsSkipVerify: true

redis:
  auth:
    enabled: false
    sentinel: false
  master:
    persistence:
      storageClass: *storage_class_name
      size: "1Gi"
  replica:
    replicaCount: 0
    persistence:
      enabled: false
      storageClass: *storage_class_name
      size: "1Gi"
