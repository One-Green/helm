apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .Release.Name }}-influxdb"
spec:
  serviceName: "{{ .Release.Name }}-influxdb"
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-influxdb"
  replicas: 1
  template:
    metadata:
      name: "{{ .Release.Name }}-influxdb"
      labels:
        app: "{{ .Release.Name }}-influxdb"
      annotations:
        release.revision: "{{ .Release.Revision }}"
    spec:
      containers:
        - name: influxdb
          image: "{{ .Values.influxDB.image }}"
          env:
            - name: DOCKER_INFLUXDB_INIT_MODE
              valueFrom:
                configMapKeyRef:
                  key: "DOCKER_INFLUXDB_INIT_MODE"
                  name: "{{ .Release.Name }}-config"
            - name: DOCKER_INFLUXDB_INIT_USERNAME
              valueFrom:
                secretKeyRef:
                  key: "DOCKER_INFLUXDB_INIT_USERNAME"
                  name: "{{ .Release.Name }}-secrets"
            - name: DOCKER_INFLUXDB_INIT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: "DOCKER_INFLUXDB_INIT_PASSWORD"
                  name: "{{ .Release.Name }}-secrets"
            - name: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
              valueFrom:
                secretKeyRef:
                  key: "DOCKER_INFLUXDB_INIT_ADMIN_TOKEN"
                  name: "{{ .Release.Name }}-secrets"
            - name: DOCKER_INFLUXDB_INIT_ORG
              valueFrom:
                configMapKeyRef:
                  key: DOCKER_INFLUXDB_INIT_ORG
                  name: "{{ .Release.Name }}-config"
            - name: DOCKER_INFLUXDB_INIT_BUCKET
              valueFrom:
                configMapKeyRef:
                  key: DOCKER_INFLUXDB_INIT_BUCKET
                  name: "{{ .Release.Name }}-config"
            - name: DOCKER_INFLUXDB_INIT_RETENTION
              valueFrom:
                configMapKeyRef:
                  key: DOCKER_INFLUXDB_INIT_RETENTION
                  name: "{{ .Release.Name }}-config"
          {{ if eq .Values.influxDB.persistent.enablePersistant "true"}}
          volumeMounts:
            - name: "{{ .Release.Name }}-influxdb-data"
              mountPath: /var/lib/influxdb
          {{ end }}
          ports:
            - containerPort: 8086
  {{ if eq .Values.influxDB.persistent.enablePersistant "true"}}
  volumeClaimTemplates:
    - metadata:
        name: "{{ .Release.Name }}-influxdb-data"
      spec:
        storageClassName: "{{ .Values.influxDB.persistent.storageClass }}"
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "{{ .Values.influxDB.persistent.volumeRequest }}"
  {{ end }}
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Release.Name }}-influxdb"
spec:
  selector:
    app: "{{ .Release.Name }}-influxdb"
  ports:
    - port: 8086
  type: ClusterIP
