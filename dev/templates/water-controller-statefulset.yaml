{{ if eq .Values.waterController.enable "true" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .Release.Name }}-water-controller"
spec:
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-water-controller"
  serviceName: "water-controller"
  replicas: 1
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-water-controller"
    spec:
      containers:
        - name: water-controller
          image: "{{ .Values.waterController.image }}"
          command: [ '/bin/sh', '-c' ]
          args:
            - python manage.py water_controller
          imagePullPolicy: "{{ .Values.waterController.imagePullPolicy }}"
          envFrom:
            - configMapRef:
                name: "{{ .Release.Name }}-config"
            - secretRef:
                name:  "{{ .Release.Name }}-secrets"
          env:
            - name: MQTT_USERNAME
              value: {{ .Values.rabbitmq.auth.username }}
            - name: MQTT_PASSWORD
              value: {{ .Values.rabbitmq.auth.password }}
            - name: "HEALTH_CHECK_TYPE"
              value: "redis,pg,mqtt"
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 15
            timeoutSeconds: 10
            exec:
              command:
                - python
                - health_check.py
  {{ end }}
