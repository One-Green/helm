apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .Release.Name }}-telegraf"
spec:
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-telegraf"
  serviceName: "{{ .Release.Name }}-telegraf"
  replicas: 1
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-telegraf"
      annotations:
        release.revision: "{{ .Release.Revision }}"
    spec:
      containers:
        - name: telegraf
          imagePullPolicy: IfNotPresent
          image: {{ .Values.telegraf.image }}
          env:
            - name: INFLUX_URL
              valueFrom:
                configMapKeyRef:
                  key: "INFLUX_URL"
                  name: "{{ .Release.Name }}-config"
            - name: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
              valueFrom:
               secretKeyRef:
                key: "DOCKER_INFLUXDB_INIT_ADMIN_TOKEN"
                name: "{{ .Release.Name }}-secrets"
            - name: DOCKER_INFLUXDB_INIT_ORG
              valueFrom:
               configMapKeyRef:
                key: "DOCKER_INFLUXDB_INIT_ORG"
                name: "{{ .Release.Name }}-config"
            - name: DOCKER_INFLUXDB_INIT_BUCKET
              valueFrom:
               configMapKeyRef:
                key: "DOCKER_INFLUXDB_INIT_BUCKET"
                name: "{{ .Release.Name }}-config"
            - name: HEALTH_CHECK_TYPE
              value: "mqtt,influxdb"
          volumeMounts:
            - name: conf
              mountPath: /etc/telegraf
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            exec:
              command:
                - python
                - /tools/health_check.py
      volumes:
        - name: conf
          configMap:
            name: "{{ .Release.Name}}-telegraf-config"
