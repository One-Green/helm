apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-worker"
spec:
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-worker"
  replicas: {{ .Values.controllerWorker.replicas }}
  template:
    metadata:
      annotations:
        release.revision: "{{ .Release.Revision }}"
      labels:
        app: "{{ .Release.Name }}-worker"
    spec:
      containers:
        - name: worker
          image: "{{ .Values.controllerWorker.image }}"
          command: [ '/bin/bash', '-c' ]
          args: [ 'celery -A project worker -l {{ .Values.controllerWorker.log.level}}' ]
          imagePullPolicy: "{{ .Values.controllerWorker.imagePullPolicy }}"
          envFrom:
          - configMapRef:
              name: "{{ .Release.Name }}-config"
          - secretRef:
              name:  "{{ .Release.Name }}-secrets"
          env:
            - name: C_FORCE_ROOT
              value: "true"
            - name: "HEALTH_CHECK_TYPE"
              value: "redis,pg,mqtt"
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            exec:
              command:
                - python
                - health_check.py
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: "{{ .Release.Name }}-worker"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: "{{ .Release.Name }}-worker"
  minReplicas: {{ .Values.controllerWorker.HPA.minReplicas }}
  maxReplicas: {{ .Values.controllerWorker.HPA.maxReplicas }}
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: {{ .Values.controllerWorker.HPA.cpu.targetAverageUtilization }}
