apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-worker"
spec:
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-worker"
  replicas: {{ .Values.controllerWorker.replicas }}
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-worker"
    spec:
      containers:
        - name: worker
          image: "{{ .Values.controllerWorker.image }}"
          command: [ '/bin/bash', '-c' ]
          args: [ 'celery -A project worker -l {{ .Values.controllerWorker.log.level}}' ]
          imagePullPolicy: "{{ .Values.controllerWorker.imagePullPolicy }}"
          env:
            - name: C_FORCE_ROOT
              value: "true"
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_HOST
                  name: "{{ .Release.Name }}-config"
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PORT
                  name: "{{ .Release.Name }}-config"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_USER
                  name: "{{ .Release.Name }}-secrets"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: "{{ .Release.Name }}-secrets"
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: "{{ .Release.Name }}-config"
            - name: MQTT_HOST
              valueFrom:
                configMapKeyRef:
                  key: MQTT_HOST
                  name: "{{ .Release.Name }}-config"
            - name: MQTT_PORT
              valueFrom:
                configMapKeyRef:
                  key: MQTT_PORT
                  name: "{{ .Release.Name }}-config"
            - name: MQTT_USER
              valueFrom:
                secretKeyRef:
                  key: MOSQUITTO_USERNAME
                  name: "{{ .Release.Name }}-secrets"
            - name: MQTT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: MOSQUITTO_PASSWORD
                  name: "{{ .Release.Name }}-secrets"
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  key: REDIS_HOST
                  name: "{{ .Release.Name }}-config"
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  key: REDIS_PORT
                  name: "{{ .Release.Name }}-config"
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: "{{ .Release.Name }}-worker"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: "{{ .Release.Name }}-worker"
  minReplicas: {{ .Values.controllerWorker.HPA.minReplicas }}
  maxReplicas: {{ .Values.controllerWorker.HPA.maxReplicas }}
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: {{ .Values.controllerWorker.HPA.cpu.targetAverageUtilization }}